--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=19 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 18.1 cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_compare 2018:09:12:13:04:24:SJ cbx_lpm_decode 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_fua
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[18..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[18..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode2495w[2..0]	: WIRE;
	w_anode2508w[3..0]	: WIRE;
	w_anode2525w[3..0]	: WIRE;
	w_anode2535w[3..0]	: WIRE;
	w_anode2545w[3..0]	: WIRE;
	w_anode2555w[3..0]	: WIRE;
	w_anode2565w[3..0]	: WIRE;
	w_anode2575w[3..0]	: WIRE;
	w_anode2585w[3..0]	: WIRE;
	w_anode2597w[2..0]	: WIRE;
	w_anode2606w[3..0]	: WIRE;
	w_anode2617w[3..0]	: WIRE;
	w_anode2627w[3..0]	: WIRE;
	w_anode2637w[3..0]	: WIRE;
	w_anode2647w[3..0]	: WIRE;
	w_anode2657w[3..0]	: WIRE;
	w_anode2667w[3..0]	: WIRE;
	w_anode2677w[3..0]	: WIRE;
	w_anode2688w[2..0]	: WIRE;
	w_anode2697w[3..0]	: WIRE;
	w_anode2708w[3..0]	: WIRE;
	w_anode2718w[3..0]	: WIRE;
	w_anode2728w[3..0]	: WIRE;
	w_anode2738w[3..0]	: WIRE;
	w_anode2748w[3..0]	: WIRE;
	w_anode2758w[3..0]	: WIRE;
	w_anode2768w[3..0]	: WIRE;
	w_anode2779w[2..0]	: WIRE;
	w_anode2788w[3..0]	: WIRE;
	w_anode2799w[3..0]	: WIRE;
	w_anode2809w[3..0]	: WIRE;
	w_anode2819w[3..0]	: WIRE;
	w_anode2829w[3..0]	: WIRE;
	w_anode2839w[3..0]	: WIRE;
	w_anode2849w[3..0]	: WIRE;
	w_anode2859w[3..0]	: WIRE;
	w_data2493w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[18..0] = eq_wire[18..0];
	eq_wire[] = ( ( w_anode2859w[3..3], w_anode2849w[3..3], w_anode2839w[3..3], w_anode2829w[3..3], w_anode2819w[3..3], w_anode2809w[3..3], w_anode2799w[3..3], w_anode2788w[3..3]), ( w_anode2768w[3..3], w_anode2758w[3..3], w_anode2748w[3..3], w_anode2738w[3..3], w_anode2728w[3..3], w_anode2718w[3..3], w_anode2708w[3..3], w_anode2697w[3..3]), ( w_anode2677w[3..3], w_anode2667w[3..3], w_anode2657w[3..3], w_anode2647w[3..3], w_anode2637w[3..3], w_anode2627w[3..3], w_anode2617w[3..3], w_anode2606w[3..3]), ( w_anode2585w[3..3], w_anode2575w[3..3], w_anode2565w[3..3], w_anode2555w[3..3], w_anode2545w[3..3], w_anode2535w[3..3], w_anode2525w[3..3], w_anode2508w[3..3]));
	w_anode2495w[] = ( (w_anode2495w[1..1] & (! data_wire[4..4])), (w_anode2495w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode2508w[] = ( (w_anode2508w[2..2] & (! w_data2493w[2..2])), (w_anode2508w[1..1] & (! w_data2493w[1..1])), (w_anode2508w[0..0] & (! w_data2493w[0..0])), w_anode2495w[2..2]);
	w_anode2525w[] = ( (w_anode2525w[2..2] & (! w_data2493w[2..2])), (w_anode2525w[1..1] & (! w_data2493w[1..1])), (w_anode2525w[0..0] & w_data2493w[0..0]), w_anode2495w[2..2]);
	w_anode2535w[] = ( (w_anode2535w[2..2] & (! w_data2493w[2..2])), (w_anode2535w[1..1] & w_data2493w[1..1]), (w_anode2535w[0..0] & (! w_data2493w[0..0])), w_anode2495w[2..2]);
	w_anode2545w[] = ( (w_anode2545w[2..2] & (! w_data2493w[2..2])), (w_anode2545w[1..1] & w_data2493w[1..1]), (w_anode2545w[0..0] & w_data2493w[0..0]), w_anode2495w[2..2]);
	w_anode2555w[] = ( (w_anode2555w[2..2] & w_data2493w[2..2]), (w_anode2555w[1..1] & (! w_data2493w[1..1])), (w_anode2555w[0..0] & (! w_data2493w[0..0])), w_anode2495w[2..2]);
	w_anode2565w[] = ( (w_anode2565w[2..2] & w_data2493w[2..2]), (w_anode2565w[1..1] & (! w_data2493w[1..1])), (w_anode2565w[0..0] & w_data2493w[0..0]), w_anode2495w[2..2]);
	w_anode2575w[] = ( (w_anode2575w[2..2] & w_data2493w[2..2]), (w_anode2575w[1..1] & w_data2493w[1..1]), (w_anode2575w[0..0] & (! w_data2493w[0..0])), w_anode2495w[2..2]);
	w_anode2585w[] = ( (w_anode2585w[2..2] & w_data2493w[2..2]), (w_anode2585w[1..1] & w_data2493w[1..1]), (w_anode2585w[0..0] & w_data2493w[0..0]), w_anode2495w[2..2]);
	w_anode2597w[] = ( (w_anode2597w[1..1] & (! data_wire[4..4])), (w_anode2597w[0..0] & data_wire[3..3]), enable_wire);
	w_anode2606w[] = ( (w_anode2606w[2..2] & (! w_data2493w[2..2])), (w_anode2606w[1..1] & (! w_data2493w[1..1])), (w_anode2606w[0..0] & (! w_data2493w[0..0])), w_anode2597w[2..2]);
	w_anode2617w[] = ( (w_anode2617w[2..2] & (! w_data2493w[2..2])), (w_anode2617w[1..1] & (! w_data2493w[1..1])), (w_anode2617w[0..0] & w_data2493w[0..0]), w_anode2597w[2..2]);
	w_anode2627w[] = ( (w_anode2627w[2..2] & (! w_data2493w[2..2])), (w_anode2627w[1..1] & w_data2493w[1..1]), (w_anode2627w[0..0] & (! w_data2493w[0..0])), w_anode2597w[2..2]);
	w_anode2637w[] = ( (w_anode2637w[2..2] & (! w_data2493w[2..2])), (w_anode2637w[1..1] & w_data2493w[1..1]), (w_anode2637w[0..0] & w_data2493w[0..0]), w_anode2597w[2..2]);
	w_anode2647w[] = ( (w_anode2647w[2..2] & w_data2493w[2..2]), (w_anode2647w[1..1] & (! w_data2493w[1..1])), (w_anode2647w[0..0] & (! w_data2493w[0..0])), w_anode2597w[2..2]);
	w_anode2657w[] = ( (w_anode2657w[2..2] & w_data2493w[2..2]), (w_anode2657w[1..1] & (! w_data2493w[1..1])), (w_anode2657w[0..0] & w_data2493w[0..0]), w_anode2597w[2..2]);
	w_anode2667w[] = ( (w_anode2667w[2..2] & w_data2493w[2..2]), (w_anode2667w[1..1] & w_data2493w[1..1]), (w_anode2667w[0..0] & (! w_data2493w[0..0])), w_anode2597w[2..2]);
	w_anode2677w[] = ( (w_anode2677w[2..2] & w_data2493w[2..2]), (w_anode2677w[1..1] & w_data2493w[1..1]), (w_anode2677w[0..0] & w_data2493w[0..0]), w_anode2597w[2..2]);
	w_anode2688w[] = ( (w_anode2688w[1..1] & data_wire[4..4]), (w_anode2688w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode2697w[] = ( (w_anode2697w[2..2] & (! w_data2493w[2..2])), (w_anode2697w[1..1] & (! w_data2493w[1..1])), (w_anode2697w[0..0] & (! w_data2493w[0..0])), w_anode2688w[2..2]);
	w_anode2708w[] = ( (w_anode2708w[2..2] & (! w_data2493w[2..2])), (w_anode2708w[1..1] & (! w_data2493w[1..1])), (w_anode2708w[0..0] & w_data2493w[0..0]), w_anode2688w[2..2]);
	w_anode2718w[] = ( (w_anode2718w[2..2] & (! w_data2493w[2..2])), (w_anode2718w[1..1] & w_data2493w[1..1]), (w_anode2718w[0..0] & (! w_data2493w[0..0])), w_anode2688w[2..2]);
	w_anode2728w[] = ( (w_anode2728w[2..2] & (! w_data2493w[2..2])), (w_anode2728w[1..1] & w_data2493w[1..1]), (w_anode2728w[0..0] & w_data2493w[0..0]), w_anode2688w[2..2]);
	w_anode2738w[] = ( (w_anode2738w[2..2] & w_data2493w[2..2]), (w_anode2738w[1..1] & (! w_data2493w[1..1])), (w_anode2738w[0..0] & (! w_data2493w[0..0])), w_anode2688w[2..2]);
	w_anode2748w[] = ( (w_anode2748w[2..2] & w_data2493w[2..2]), (w_anode2748w[1..1] & (! w_data2493w[1..1])), (w_anode2748w[0..0] & w_data2493w[0..0]), w_anode2688w[2..2]);
	w_anode2758w[] = ( (w_anode2758w[2..2] & w_data2493w[2..2]), (w_anode2758w[1..1] & w_data2493w[1..1]), (w_anode2758w[0..0] & (! w_data2493w[0..0])), w_anode2688w[2..2]);
	w_anode2768w[] = ( (w_anode2768w[2..2] & w_data2493w[2..2]), (w_anode2768w[1..1] & w_data2493w[1..1]), (w_anode2768w[0..0] & w_data2493w[0..0]), w_anode2688w[2..2]);
	w_anode2779w[] = ( (w_anode2779w[1..1] & data_wire[4..4]), (w_anode2779w[0..0] & data_wire[3..3]), enable_wire);
	w_anode2788w[] = ( (w_anode2788w[2..2] & (! w_data2493w[2..2])), (w_anode2788w[1..1] & (! w_data2493w[1..1])), (w_anode2788w[0..0] & (! w_data2493w[0..0])), w_anode2779w[2..2]);
	w_anode2799w[] = ( (w_anode2799w[2..2] & (! w_data2493w[2..2])), (w_anode2799w[1..1] & (! w_data2493w[1..1])), (w_anode2799w[0..0] & w_data2493w[0..0]), w_anode2779w[2..2]);
	w_anode2809w[] = ( (w_anode2809w[2..2] & (! w_data2493w[2..2])), (w_anode2809w[1..1] & w_data2493w[1..1]), (w_anode2809w[0..0] & (! w_data2493w[0..0])), w_anode2779w[2..2]);
	w_anode2819w[] = ( (w_anode2819w[2..2] & (! w_data2493w[2..2])), (w_anode2819w[1..1] & w_data2493w[1..1]), (w_anode2819w[0..0] & w_data2493w[0..0]), w_anode2779w[2..2]);
	w_anode2829w[] = ( (w_anode2829w[2..2] & w_data2493w[2..2]), (w_anode2829w[1..1] & (! w_data2493w[1..1])), (w_anode2829w[0..0] & (! w_data2493w[0..0])), w_anode2779w[2..2]);
	w_anode2839w[] = ( (w_anode2839w[2..2] & w_data2493w[2..2]), (w_anode2839w[1..1] & (! w_data2493w[1..1])), (w_anode2839w[0..0] & w_data2493w[0..0]), w_anode2779w[2..2]);
	w_anode2849w[] = ( (w_anode2849w[2..2] & w_data2493w[2..2]), (w_anode2849w[1..1] & w_data2493w[1..1]), (w_anode2849w[0..0] & (! w_data2493w[0..0])), w_anode2779w[2..2]);
	w_anode2859w[] = ( (w_anode2859w[2..2] & w_data2493w[2..2]), (w_anode2859w[1..1] & w_data2493w[1..1]), (w_anode2859w[0..0] & w_data2493w[0..0]), w_anode2779w[2..2]);
	w_data2493w[2..0] = data_wire[2..0];
END;
--VALID FILE
